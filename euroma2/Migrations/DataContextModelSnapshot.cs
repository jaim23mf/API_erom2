// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using euroma2.Models;

#nullable disable

namespace euroma2.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("euroma2.Models.Date_Range", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Date_Range");
                });

            modelBuilder.Entity("euroma2.Models.Events.LineaInterest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Mall_Eventid")
                        .HasColumnType("int");

                    b.Property<int?>("Promotionid")
                        .HasColumnType("int");

                    b.Property<int>("id_event")
                        .HasColumnType("int");

                    b.Property<int>("id_interest")
                        .HasColumnType("int");

                    b.Property<int>("id_promotion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Mall_Eventid");

                    b.HasIndex("Promotionid");

                    b.ToTable("LineaInterest");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("dateRangeid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("dateRangeid");

                    b.ToTable("events");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Day_Opening_Hours_Food", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fromWeekDay")
                        .HasColumnType("int");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("toWeekDay")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Day_Opening_Hours_Food");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Day_Opening_Hours_Hipermarket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fromWeekDay")
                        .HasColumnType("int");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("toWeekDay")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Day_Opening_Hours_Hipermarket");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Day_Opening_Hours_Stores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fromWeekDay")
                        .HasColumnType("int");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("toWeekDay")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Day_Opening_Hours_Stores");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Exception_Rules", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Openingid")
                        .HasColumnType("int");

                    b.Property<int>("dateRangeid")
                        .HasColumnType("int");

                    b.Property<int>("foodid")
                        .HasColumnType("int");

                    b.Property<int>("globalid")
                        .HasColumnType("int");

                    b.Property<int>("hypermarketid")
                        .HasColumnType("int");

                    b.Property<int>("ourStoresid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Openingid");

                    b.HasIndex("dateRangeid");

                    b.HasIndex("foodid");

                    b.HasIndex("globalid");

                    b.HasIndex("hypermarketid");

                    b.HasIndex("ourStoresid");

                    b.ToTable("opening_exceptions");
                });

            modelBuilder.Entity("euroma2.Models.Hours.General", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("foodid")
                        .HasColumnType("int");

                    b.Property<int>("globalid")
                        .HasColumnType("int");

                    b.Property<int>("hypermarketid")
                        .HasColumnType("int");

                    b.Property<int>("ourStoresid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("foodid");

                    b.HasIndex("globalid");

                    b.HasIndex("hypermarketid");

                    b.HasIndex("ourStoresid");

                    b.ToTable("opening_general");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Opening", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("generalid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("generalid");

                    b.ToTable("opening_hours");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Time_Range", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Time_Range");
                });

            modelBuilder.Entity("euroma2.Models.Interest.Interest_model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("group")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("interests");
                });

            modelBuilder.Entity("euroma2.Models.LineaShopCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Shopid")
                        .HasColumnType("int");

                    b.Property<int>("id_category")
                        .HasColumnType("int");

                    b.Property<int>("id_shop")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Shopid");

                    b.ToTable("LineaShopCategory");
                });

            modelBuilder.Entity("euroma2.Models.LineaShopSubCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Shopid")
                        .HasColumnType("int");

                    b.Property<int>("id_shop")
                        .HasColumnType("int");

                    b.Property<int>("id_subcategory")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Shopid");

                    b.ToTable("LineaShopSubCategory");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("modelUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("floorInfo");
                });

            modelBuilder.Entity("euroma2.Models.Map.Floor_Nav_Point", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("FloorInfoid")
                        .HasColumnType("int");

                    b.Property<string>("attachedShopNode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("FloorInfoid");

                    b.ToTable("Floor_Nav_Point");
                });

            modelBuilder.Entity("euroma2.Models.Map.Floor_Shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("FloorInfoid")
                        .HasColumnType("int");

                    b.Property<int>("attachedShopid")
                        .HasColumnType("int");

                    b.Property<string>("nodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("FloorInfoid");

                    b.HasIndex("attachedShopid");

                    b.ToTable("Floor_Shop");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("dateRangeid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("shopId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("dateRangeid");

                    b.ToTable("promotion");
                });

            modelBuilder.Entity("euroma2.Models.Reach.Reach_Us", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("borrado")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("reach");
                });

            modelBuilder.Entity("euroma2.Models.Service.Service_model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("service");
                });

            modelBuilder.Entity("euroma2.Models.Shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("shop");
                });

            modelBuilder.Entity("euroma2.Models.ShopCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("shopCategory");
                });

            modelBuilder.Entity("euroma2.Models.ShopInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ShopInfo");
                });

            modelBuilder.Entity("euroma2.Models.ShopSubCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("shopSubCategory");
                });

            modelBuilder.Entity("euroma2.Models.oDay", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Shopid")
                        .HasColumnType("int");

                    b.Property<int>("description")
                        .HasColumnType("int");

                    b.Property<string>("hf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Shopid");

                    b.ToTable("oDay");
                });

            modelBuilder.Entity("euroma2.Models.Events.LineaInterest", b =>
                {
                    b.HasOne("euroma2.Models.Events.Mall_Event", null)
                        .WithMany("interestIds")
                        .HasForeignKey("Mall_Eventid");

                    b.HasOne("euroma2.Models.Promo.Promotion", null)
                        .WithMany("interestIds")
                        .HasForeignKey("Promotionid");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event", b =>
                {
                    b.HasOne("euroma2.Models.Date_Range", "dateRange")
                        .WithMany()
                        .HasForeignKey("dateRangeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dateRange");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Exception_Rules", b =>
                {
                    b.HasOne("euroma2.Models.Hours.Opening", null)
                        .WithMany("exceptions")
                        .HasForeignKey("Openingid");

                    b.HasOne("euroma2.Models.Date_Range", "dateRange")
                        .WithMany()
                        .HasForeignKey("dateRangeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Food", "food")
                        .WithMany()
                        .HasForeignKey("foodid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Time_Range", "global")
                        .WithMany()
                        .HasForeignKey("globalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Hipermarket", "hypermarket")
                        .WithMany()
                        .HasForeignKey("hypermarketid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Stores", "ourStores")
                        .WithMany()
                        .HasForeignKey("ourStoresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dateRange");

                    b.Navigation("food");

                    b.Navigation("global");

                    b.Navigation("hypermarket");

                    b.Navigation("ourStores");
                });

            modelBuilder.Entity("euroma2.Models.Hours.General", b =>
                {
                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Food", "food")
                        .WithMany()
                        .HasForeignKey("foodid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Time_Range", "global")
                        .WithMany()
                        .HasForeignKey("globalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Hipermarket", "hypermarket")
                        .WithMany()
                        .HasForeignKey("hypermarketid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Stores", "ourStores")
                        .WithMany()
                        .HasForeignKey("ourStoresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("food");

                    b.Navigation("global");

                    b.Navigation("hypermarket");

                    b.Navigation("ourStores");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Opening", b =>
                {
                    b.HasOne("euroma2.Models.Hours.General", "general")
                        .WithMany()
                        .HasForeignKey("generalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("general");
                });

            modelBuilder.Entity("euroma2.Models.LineaShopCategory", b =>
                {
                    b.HasOne("euroma2.Models.Shop", null)
                        .WithMany("category")
                        .HasForeignKey("Shopid");
                });

            modelBuilder.Entity("euroma2.Models.LineaShopSubCategory", b =>
                {
                    b.HasOne("euroma2.Models.Shop", null)
                        .WithMany("subcategory")
                        .HasForeignKey("Shopid");
                });

            modelBuilder.Entity("euroma2.Models.Map.Floor_Nav_Point", b =>
                {
                    b.HasOne("euroma2.Models.Map.FloorInfo", null)
                        .WithMany("navPoints")
                        .HasForeignKey("FloorInfoid");
                });

            modelBuilder.Entity("euroma2.Models.Map.Floor_Shop", b =>
                {
                    b.HasOne("euroma2.Models.Map.FloorInfo", null)
                        .WithMany("shopNodes")
                        .HasForeignKey("FloorInfoid");

                    b.HasOne("euroma2.Models.ShopInfo", "attachedShop")
                        .WithMany()
                        .HasForeignKey("attachedShopid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("attachedShop");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion", b =>
                {
                    b.HasOne("euroma2.Models.Date_Range", "dateRange")
                        .WithMany()
                        .HasForeignKey("dateRangeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dateRange");
                });

            modelBuilder.Entity("euroma2.Models.oDay", b =>
                {
                    b.HasOne("euroma2.Models.Shop", null)
                        .WithMany("openingHours")
                        .HasForeignKey("Shopid");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event", b =>
                {
                    b.Navigation("interestIds");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Opening", b =>
                {
                    b.Navigation("exceptions");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorInfo", b =>
                {
                    b.Navigation("navPoints");

                    b.Navigation("shopNodes");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion", b =>
                {
                    b.Navigation("interestIds");
                });

            modelBuilder.Entity("euroma2.Models.Shop", b =>
                {
                    b.Navigation("category");

                    b.Navigation("openingHours");

                    b.Navigation("subcategory");
                });
#pragma warning restore 612, 618
        }
    }
}
