// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using euroma2.Models;

#nullable disable

namespace euroma2.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("euroma2.Models.Blog_model.Blog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("highlight")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("shortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("thumb")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("blog");
                });

            modelBuilder.Entity("euroma2.Models.Blog_model.Blog_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("blogid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("shortDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("blogid");

                    b.ToTable("blog_it");
                });

            modelBuilder.Entity("euroma2.Models.Date_Range", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dRange");
                });

            modelBuilder.Entity("euroma2.Models.Events.LineaInterest_event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Mall_Eventid")
                        .HasColumnType("int");

                    b.Property<int>("id_event")
                        .HasColumnType("int");

                    b.Property<int>("id_interest")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Mall_Eventid");

                    b.ToTable("liEvents");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("dateRangeid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("youtubeLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("dateRangeid");

                    b.ToTable("events");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("mall_eventid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("mall_eventid");

                    b.ToTable("events_it");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Day_Opening_Hours_Food", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("fromWeekDay")
                        .HasColumnType("int");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("toWeekDay")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Day_Opening_Hours_Food");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Day_Opening_Hours_Hipermarket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("fromWeekDay")
                        .HasColumnType("int");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("toWeekDay")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Day_Opening_Hours_Hipermarket");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Day_Opening_Hours_Stores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("fromWeekDay")
                        .HasColumnType("int");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("toWeekDay")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Day_Opening_Hours_Stores");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Exception_Rules", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Openingid")
                        .HasColumnType("int");

                    b.Property<int>("dateRangeid")
                        .HasColumnType("int");

                    b.Property<int>("foodid")
                        .HasColumnType("int");

                    b.Property<int>("globalid")
                        .HasColumnType("int");

                    b.Property<int>("hypermarketid")
                        .HasColumnType("int");

                    b.Property<int>("ourStoresid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Openingid");

                    b.HasIndex("dateRangeid");

                    b.HasIndex("foodid");

                    b.HasIndex("globalid");

                    b.HasIndex("hypermarketid");

                    b.HasIndex("ourStoresid");

                    b.ToTable("opening_exceptions");
                });

            modelBuilder.Entity("euroma2.Models.Hours.General", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("foodid")
                        .HasColumnType("int");

                    b.Property<int>("globalid")
                        .HasColumnType("int");

                    b.Property<int>("hypermarketid")
                        .HasColumnType("int");

                    b.Property<int>("ourStoresid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("foodid");

                    b.HasIndex("globalid");

                    b.HasIndex("hypermarketid");

                    b.HasIndex("ourStoresid");

                    b.ToTable("opening_general");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Opening", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("generalid")
                        .HasColumnType("int");

                    b.Property<int>("id_shop")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("generalid");

                    b.ToTable("opening_hours");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Time_Range", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Time_Range");
                });

            modelBuilder.Entity("euroma2.Models.Interest.Interest_model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("group")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("interests");
                });

            modelBuilder.Entity("euroma2.Models.Interest.Interest_model_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("interest_modelid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("interest_modelid");

                    b.ToTable("interests_it");
                });

            modelBuilder.Entity("euroma2.Models.LineaInterest_shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Shopid")
                        .HasColumnType("int");

                    b.Property<int>("id_interest")
                        .HasColumnType("int");

                    b.Property<int>("id_shop")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Shopid");

                    b.ToTable("liShop");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("floor")
                        .HasColumnType("int");

                    b.Property<string>("modelBinUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("modelUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("floor_info");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorInfo_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("fiid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("fiid");

                    b.ToTable("floor_info_it");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorNavPoint", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FloorInfoid")
                        .HasColumnType("int");

                    b.Property<string>("attachedShopNode")
                        .HasColumnType("longtext");

                    b.Property<string>("nodeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("FloorInfoid");

                    b.ToTable("floor_navpoint");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorNavPointRelation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FloorNavPointid")
                        .HasColumnType("int");

                    b.Property<bool>("accessibility")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("linkWeight")
                        .HasColumnType("float");

                    b.Property<int>("targetFloorId")
                        .HasColumnType("int");

                    b.Property<string>("targetNode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("FloorNavPointid");

                    b.ToTable("floor_navpoint_relation");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorShop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FloorInfoid")
                        .HasColumnType("int");

                    b.Property<int?>("attachedShopId")
                        .HasColumnType("int");

                    b.Property<string>("nodeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("FloorInfoid");

                    b.ToTable("floor_shop");
                });

            modelBuilder.Entity("euroma2.Models.oDay", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Shopid")
                        .HasColumnType("int");

                    b.Property<int>("description")
                        .HasColumnType("int");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_shop")
                        .HasColumnType("int");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Shopid");

                    b.ToTable("oDay");
                });

            modelBuilder.Entity("euroma2.Models.Promo.LineaInterest_promo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Promotionid")
                        .HasColumnType("int");

                    b.Property<int>("id_interest")
                        .HasColumnType("int");

                    b.Property<int>("id_promo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Promotionid");

                    b.ToTable("liPromo");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("dateRangeid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("shopId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("dateRangeid");

                    b.ToTable("promotion");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("promotionid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("promotionid");

                    b.ToTable("promotion_it");
                });

            modelBuilder.Entity("euroma2.Models.Reach.Reach_Us", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("reach");
                });

            modelBuilder.Entity("euroma2.Models.Reach.Reach_Us_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("reachid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("reachid");

                    b.ToTable("reach_it");
                });

            modelBuilder.Entity("euroma2.Models.Service.Service_model", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("order")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("service");
                });

            modelBuilder.Entity("euroma2.Models.Service.Service_model_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("smid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("smid");

                    b.ToTable("service_it");
                });

            modelBuilder.Entity("euroma2.Models.Shop", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("firstOpeningDay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("subcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("shop");
                });

            modelBuilder.Entity("euroma2.Models.Shop_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("shopid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("shopid");

                    b.ToTable("shop_it");
                });

            modelBuilder.Entity("euroma2.Models.ShopCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("shopType")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("shopCategory");
                });

            modelBuilder.Entity("euroma2.Models.ShopCategory_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cat_id")
                        .HasColumnType("int");

                    b.Property<int>("shopCategoryid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("shopCategoryid");

                    b.ToTable("shopCategory_it");
                });

            modelBuilder.Entity("euroma2.Models.ShopSubCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("shopSubCategory");
                });

            modelBuilder.Entity("euroma2.Models.ShopSubCategory_it", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("shopSubCategoryid")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("shopSubCategoryid");

                    b.ToTable("shopSubCategory_it");
                });

            modelBuilder.Entity("euroma2.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshTokenExpires")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("euroma2.Models.Blog_model.Blog_it", b =>
                {
                    b.HasOne("euroma2.Models.Blog_model.Blog", "blog")
                        .WithMany()
                        .HasForeignKey("blogid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("blog");
                });

            modelBuilder.Entity("euroma2.Models.Events.LineaInterest_event", b =>
                {
                    b.HasOne("euroma2.Models.Events.Mall_Event", null)
                        .WithMany("interestIds")
                        .HasForeignKey("Mall_Eventid");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event", b =>
                {
                    b.HasOne("euroma2.Models.Date_Range", "dateRange")
                        .WithMany()
                        .HasForeignKey("dateRangeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dateRange");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event_it", b =>
                {
                    b.HasOne("euroma2.Models.Events.Mall_Event", "mall_event")
                        .WithMany()
                        .HasForeignKey("mall_eventid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mall_event");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Exception_Rules", b =>
                {
                    b.HasOne("euroma2.Models.Hours.Opening", null)
                        .WithMany("exceptions")
                        .HasForeignKey("Openingid");

                    b.HasOne("euroma2.Models.Date_Range", "dateRange")
                        .WithMany()
                        .HasForeignKey("dateRangeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Food", "food")
                        .WithMany()
                        .HasForeignKey("foodid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Time_Range", "global")
                        .WithMany()
                        .HasForeignKey("globalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Hipermarket", "hypermarket")
                        .WithMany()
                        .HasForeignKey("hypermarketid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Stores", "ourStores")
                        .WithMany()
                        .HasForeignKey("ourStoresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dateRange");

                    b.Navigation("food");

                    b.Navigation("global");

                    b.Navigation("hypermarket");

                    b.Navigation("ourStores");
                });

            modelBuilder.Entity("euroma2.Models.Hours.General", b =>
                {
                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Food", "food")
                        .WithMany()
                        .HasForeignKey("foodid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Time_Range", "global")
                        .WithMany()
                        .HasForeignKey("globalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Hipermarket", "hypermarket")
                        .WithMany()
                        .HasForeignKey("hypermarketid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("euroma2.Models.Hours.Day_Opening_Hours_Stores", "ourStores")
                        .WithMany()
                        .HasForeignKey("ourStoresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("food");

                    b.Navigation("global");

                    b.Navigation("hypermarket");

                    b.Navigation("ourStores");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Opening", b =>
                {
                    b.HasOne("euroma2.Models.Hours.General", "general")
                        .WithMany()
                        .HasForeignKey("generalid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("general");
                });

            modelBuilder.Entity("euroma2.Models.Interest.Interest_model_it", b =>
                {
                    b.HasOne("euroma2.Models.Interest.Interest_model", "interest_model")
                        .WithMany()
                        .HasForeignKey("interest_modelid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("interest_model");
                });

            modelBuilder.Entity("euroma2.Models.LineaInterest_shop", b =>
                {
                    b.HasOne("euroma2.Models.Shop", null)
                        .WithMany("interestIds")
                        .HasForeignKey("Shopid");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorInfo_it", b =>
                {
                    b.HasOne("euroma2.Models.Map.FloorInfo", "fi")
                        .WithMany()
                        .HasForeignKey("fiid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fi");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorNavPoint", b =>
                {
                    b.HasOne("euroma2.Models.Map.FloorInfo", null)
                        .WithMany("navPoints")
                        .HasForeignKey("FloorInfoid");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorNavPointRelation", b =>
                {
                    b.HasOne("euroma2.Models.Map.FloorNavPoint", null)
                        .WithMany("relations")
                        .HasForeignKey("FloorNavPointid");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorShop", b =>
                {
                    b.HasOne("euroma2.Models.Map.FloorInfo", null)
                        .WithMany("shopsNodes")
                        .HasForeignKey("FloorInfoid");
                });

            modelBuilder.Entity("euroma2.Models.oDay", b =>
                {
                    b.HasOne("euroma2.Models.Shop", null)
                        .WithMany("openingHours")
                        .HasForeignKey("Shopid");
                });

            modelBuilder.Entity("euroma2.Models.Promo.LineaInterest_promo", b =>
                {
                    b.HasOne("euroma2.Models.Promo.Promotion", null)
                        .WithMany("interestIds")
                        .HasForeignKey("Promotionid");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion", b =>
                {
                    b.HasOne("euroma2.Models.Date_Range", "dateRange")
                        .WithMany()
                        .HasForeignKey("dateRangeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dateRange");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion_it", b =>
                {
                    b.HasOne("euroma2.Models.Promo.Promotion", "promotion")
                        .WithMany()
                        .HasForeignKey("promotionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("promotion");
                });

            modelBuilder.Entity("euroma2.Models.Reach.Reach_Us_it", b =>
                {
                    b.HasOne("euroma2.Models.Reach.Reach_Us", "reach")
                        .WithMany()
                        .HasForeignKey("reachid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reach");
                });

            modelBuilder.Entity("euroma2.Models.Service.Service_model_it", b =>
                {
                    b.HasOne("euroma2.Models.Service.Service_model", "sm")
                        .WithMany()
                        .HasForeignKey("smid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sm");
                });

            modelBuilder.Entity("euroma2.Models.Shop_it", b =>
                {
                    b.HasOne("euroma2.Models.Shop", "shop")
                        .WithMany()
                        .HasForeignKey("shopid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shop");
                });

            modelBuilder.Entity("euroma2.Models.ShopCategory_it", b =>
                {
                    b.HasOne("euroma2.Models.ShopCategory", "shopCategory")
                        .WithMany()
                        .HasForeignKey("shopCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shopCategory");
                });

            modelBuilder.Entity("euroma2.Models.ShopSubCategory_it", b =>
                {
                    b.HasOne("euroma2.Models.ShopSubCategory", "shopSubCategory")
                        .WithMany()
                        .HasForeignKey("shopSubCategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shopSubCategory");
                });

            modelBuilder.Entity("euroma2.Models.Events.Mall_Event", b =>
                {
                    b.Navigation("interestIds");
                });

            modelBuilder.Entity("euroma2.Models.Hours.Opening", b =>
                {
                    b.Navigation("exceptions");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorInfo", b =>
                {
                    b.Navigation("navPoints");

                    b.Navigation("shopsNodes");
                });

            modelBuilder.Entity("euroma2.Models.Map.FloorNavPoint", b =>
                {
                    b.Navigation("relations");
                });

            modelBuilder.Entity("euroma2.Models.Promo.Promotion", b =>
                {
                    b.Navigation("interestIds");
                });

            modelBuilder.Entity("euroma2.Models.Shop", b =>
                {
                    b.Navigation("interestIds");

                    b.Navigation("openingHours");
                });
#pragma warning restore 612, 618
        }
    }
}
